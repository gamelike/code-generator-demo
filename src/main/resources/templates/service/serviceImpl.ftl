/* code generated by freemarker */
package ${packageName}.service.impl;

import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Service;
import ${packageName}.service.${entityName}Service;
import ${packageName}.repository.${entityName}DAO;
import ${packageName}.model.${entityName};

@Service
@Slf4j
@RequiredArgsConstructor
public class ${entityName}ServiceImpl implements ${entityName}Service {
    private final ${entityName}DAO ${entityName?uncap_first}DAO;

    /**
    * @param ${entityName} 更新或插入对应实体
    */
    @Override
    public ${entityName} queryById(<#list fieldList as fieldItem ><#if fieldItem.primaryKey>${fieldItem.type} id</#if></#list>) {
        return ${entityName?uncap_first}DAO.queryById(id);
    }

    /**
    * @param ${entityName} 更新或插入对应实体
    */
    @Override
    public int upsert(${entityName} ${entityName?uncap_first}) {
        try {
            if (queryById(<#list fieldList as fieldItem ><#if fieldItem.primaryKey>${entityName?uncap_first}.get${fieldItem.name?cap_first}()</#if></#list>) == null) {
                ${entityName?uncap_first}DAO.add(${entityName?uncap_first});
                return 1;
            } else {
                ${entityName?uncap_first}DAO.update(${entityName?uncap_first});
                return 1;
            }
        } catch (Exception e) {
            log.error("upsert ${entityName} error", e);
            return 0;
        }
    }

    /**
    * @param id 根据主键id删除对应实体
    */
    @Override
    public int delete(<#list fieldList as fieldItem><#if fieldItem.primaryKey>${fieldItem.type} id</#if></#list>) {
        try {
            ${entityName?uncap_first}DAO.deleteById(id);
            return 1;
        } catch (Exception e) {
            log.error("delete ${entityName} error", e);
            return 0;
        }
    }
}